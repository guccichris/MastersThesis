{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 if ((atom == 0) or ((int(m) == 3) and (atom in [1, 2]))):\
        r1 = gFlow[row, :3]\
        r2 = gFlow[row, 3:6]\
        r3 = gFlow[row, 6:9]\
        \
        s1 = (r2[0] - r1[0], r2[1] - r1[1], r2[2] - r1[2])\
        s2 = (r3[0] - r2[0], r3[1] - r2[1], r3[2] - r2[2])\
        \
        A = norm(s1)*norm(s2)\
        B = np.dot(s1, s2)\
        \
        E_b = (2*beta*(A - B))/(A + B)\
        \
    elif ((int(m) >= 4) and (atom == 1)):\
        r1 = gFlow[row, :3]\
        r2 = gFlow[row, 3:6]\
        r3 = gFlow[row, 6:9]\
        r4 = gFlow[row, 9:12]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
        \
    elif ((int(m) >= 4) and (atom == int(m)-2)):\
        r1 = gFlow[row, -12:-9]\
        r2 = gFlow[row, -9:-6]\
        r3 = gFlow[row, -6:-3]\
        r4 = gFlow[row, -3:]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
        \
    elif (atom == int(m)-1):\
        r1 = gFlow[row, -9:-6]\
        r2 = gFlow[row, -6:-3]\
        r3 = gFlow[row, -3:]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
\
    elif ((int(m) >= 5) and (atom not in [0, 1, int(m)-2, int(m)-1])):\
        r1 = gFlow[row, atom*3-6, atom*3-3]\
        r2 = gFlow[row, atom*3-3:atom*3]\
        r3 = gFlow[row, atom*3:atom*3+3]\
        r4 = gFlow[row, atom*3+3:atom*3+6]\
        r5 = gFlow[row, atom*3+6:atom*3+9]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
\
    elif ((int(m) == 4) and (atom == 2)):\
        r1 = gFlow[row, atom*3-3:atom*3]\
        r2 = gFlow[row, atom*3:atom*3+3]\
        r3 = gFlow[row, atom*3+3:atom*3+6]\
        r4 = gFlow[row, atom*3+6:atom*3+9]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
\
    elif ((int(m) == 4) and (atom == 3)):\
        r1 = gFlow[row, atom*3-6:atom*3-3]\
        r2 = gFlow[row, atom*3-3:atom*3]\
        r3 = gFlow[row, atom*3:atom*3+3]\
        r4 = gFlow[row, atom*3+3:atom*3+6]\
        \
        E_b = (2*beta*(A - B))/(A + B)\
\
    else:\
        print('not valid case', 'row = ', i, 'atom = ',j, int(m), len(gFlow), sep = ' ')}